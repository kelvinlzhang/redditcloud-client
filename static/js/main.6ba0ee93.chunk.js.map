{"version":3,"sources":["sketch.js","App.js","index.js"],"names":["sketch","props","p","cloud","ih","dict","Lorem","ipsum","dolor","sit","amet","consectetur","adipiscing","elit","sed","do","colorBaseOptions","scalar","fontSize","minFontSize","colorMinOffset","colorMaxOffset","wordCloud","wordDict","Object","classCallCheck","this","wordBoxes","boundaries","Rectangle","width","height","baseColor","Math","floor","random","length","maxFreq","_arr","entries","_i","_ref5","_ref2","slicedToArray","freq","_arr2","_i2","_ref6","_ref4","word","push","wordBox","getProceduralColor","createClass","key","value","i","render","j","handleCollision","move","handleBoundary","colorBase","min","max","color","procColorHelper","red","green","blue","val","temp","text","map","textSize","randX","randY","rect","textWidth","yOffset","fill","x","y","other","bound","w","h","midX","midY","vx","vy","collides","dx","dy","constvx","force","constvy","areaScale1","pow","area","areaScale2","clampAbs","centerX","centerY","fX","fY","InputHandler","attachedBox","xOffset","clickX","clickY","isPressed","clickThreshold","contains","mouseX","mouseY","mouseClicked","console","log","updateSentimentChart","document","getElementById","setup","createCanvas","textAlign","LEFT","TOP","textLeading","draw","background","handleCollisions","handleAttachedBox","windowResized","offsetWidth","offsetHeight","resizeCanvas","mousePressed","mouseReleased","axios","require","P5Wrapper","_this$props","rest","objectWithoutProperties","canvas","p5","wrapper","newProps","remove","onNewProps","_this","react_default","a","createElement","ref","React","Component","App","_this2","possibleConstructorReturn","getPrototypeOf","call","onChangeSubreddit","e","setState","subreddit","target","onChangeStartDate","date","startDate","state","getTime","toFixed","onChangeEndDate","endDate","onSubmit","preventDefault","data","JSON","stringify","start","parseInt","end","post","headers","Content-Type","Access-Control-Allow-Origin","timeout","then","res","Date","words","bind","assertThisInitialized","className","onChange","es","selected","showTimeSelect","timeFormat","timeIntervals","dateFormat","App_P5Wrapper","ReactDOM","src_App_0"],"mappings":"0PAgYeA,EArXA,SAACC,GAAD,OAAW,SAACC,GACzB,IA2BSC,EAMLC,EAjCAC,EAAO,CACTC,MAAM,EACNC,MAAM,EACNC,MAAM,EACNC,IAAI,EACJC,KAAK,EACLC,YAAY,EACZC,WAAW,EACXC,KAAK,EACLC,IAAI,EACJC,GAAG,IAGDC,EAAmB,GAEnBC,EAAS,IAITC,EAAW,GACXC,EAAc,GAUdC,EAAiB,GACjBC,EAAiB,GAIfC,EApCyB,WAqC7B,SAAAA,EAAYC,GAAWC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,GAErBI,KAAKH,SAAWA,EAChBG,KAAKC,UAAY,GAkBjBD,KAAKE,WAAa,CAEhB,IAAIC,EAAU3B,EAAE4B,OAAS5B,EAAE6B,OAAQ7B,EAAE4B,MAAkB,EAAX5B,EAAE6B,QAE9C,IAAIF,GAAW3B,EAAE4B,OAAQ5B,EAAE6B,OAAQ7B,EAAE4B,MAAkB,EAAX5B,EAAE6B,QAE9C,IAAIF,EAAU,GAAI3B,EAAE6B,OAAQ7B,EAAE4B,MAAO5B,EAAE6B,QAEvC,IAAIF,EAAU,EAAG3B,EAAE6B,OAAQ7B,EAAE4B,MAAO5B,EAAE6B,SAMxC,IAHA,IAAIC,EAAYhB,EAAiBiB,KAAKC,MAAMD,KAAKE,SAAWnB,EAAiBoB,SAEzEC,EAAU,EAlCMC,EAmCOd,OAAOe,QAAQhB,GAA1CiB,EAAA,EAAAA,EAAAF,EAAAF,OAAAI,IAAqD,KAAAC,EAAAH,EAAAE,GAAAE,EAAAlB,OAAAmB,EAAA,EAAAnB,CAAAiB,EAAA,GAAnCG,GAAmCF,EAAA,GAAAA,EAAA,IAC/CE,EAAOP,IACTA,EAAUO,GAGd,IAxCoB,IAAAC,EAwCOrB,OAAOe,QAAQhB,GAA1CuB,EAAA,EAAAA,EAAAD,EAAAT,OAAAU,IAAqD,KAAAC,EAAAF,EAAAC,GAAAE,EAAAxB,OAAAmB,EAAA,EAAAnB,CAAAuB,EAAA,GAAzCE,EAAyCD,EAAA,GAAnCJ,EAAmCI,EAAA,GACnDtB,KAAKC,UAAUuB,KAAK,IAAIC,EAAQF,EAAML,EAAMP,EAC1CX,KAAK0B,mBAAmBpB,EAAWZ,EAAgBC,MA/E5B,OAAAG,OAAA6B,EAAA,EAAA7B,CAAAF,EAAA,EAAAgC,IAAA,SAAAC,MAAA,WAoF3B,IAAK,IAAIC,EAAI,EAAGA,EAAI9B,KAAKC,UAAUS,OAAQoB,IACzC9B,KAAKC,UAAU6B,GAAGC,WArFO,CAAAH,IAAA,mBAAAC,MAAA,WA+F3B,IAAK,IAAIC,EAAI,EAAGA,EAAI9B,KAAKC,UAAUS,OAAQoB,IACzC,IAAK,IAAIE,EAAIF,EAAGE,EAAIhC,KAAKC,UAAUS,OAAQsB,IACrCF,GAAKE,GACThC,KAAKC,UAAU6B,GAAGG,gBAAgBjC,KAAKC,UAAU+B,IAGrD,IAASF,EAAI,EAAGA,EAAI9B,KAAKC,UAAUS,OAAQoB,IACzC9B,KAAKC,UAAU6B,GAAGI,SAtGO,CAAAN,IAAA,iBAAAC,MAAA,WA2G3B,IAAK,IAAIC,EAAI,EAAGA,EAAI9B,KAAKC,UAAUS,OAAQoB,IACzC,IAAK,IAAIE,EAAI,EAAGA,EAAIhC,KAAKE,WAAWQ,OAAQsB,IAC1ChC,KAAKC,UAAU6B,GAAGK,eAAenC,KAAKE,WAAW8B,MA7G1B,CAAAJ,IAAA,qBAAAC,MAAA,SAkHVO,EAAWC,EAAKC,GACjC,OAAO9D,EAAE+D,MAAMvC,KAAKwC,gBAAgBhE,EAAEiE,IAAIL,GAAYC,EAAKC,GAC9CtC,KAAKwC,gBAAgBhE,EAAEkE,MAAMN,GAAYC,EAAKC,GAC9CtC,KAAKwC,gBAAgBhE,EAAEmE,KAAKP,GAAYC,EAAKC,MArH/B,CAAAV,IAAA,kBAAAC,MAAA,SAwHbe,EAAKP,EAAKC,GACxB,IAAIO,EAAOD,EAAOrC,KAAKE,UAAiB,EAAJ6B,EAAc,EAAJD,GAAWC,EAEzD,OADAO,EAAOtC,KAAKC,MAAMqC,GAAQ,EAAIA,EAAOR,EAAMQ,EAAOR,OA1HvBzC,EAAA,GA+HzB6B,EA/HyB,WAgI7B,SAAAA,EAAYqB,EAAM5B,EAAMP,EAAS4B,GAAQzC,OAAAC,EAAA,EAAAD,CAAAE,KAAAyB,GACvCzB,KAAK8C,KAAOA,EACZ9C,KAAKkB,KAAOA,EACZlB,KAAKW,QAAUA,EACfX,KAAKR,SAAWhB,EAAEuE,IAAI7B,EAAKP,EAAS,EAAG,EAAGlB,EAAaD,GACvDhB,EAAEwE,SAAShD,KAAKR,UAChB,IAAIyD,EAAwB,GAAhB1C,KAAKE,SAAgB,GAC7ByC,EAAwB,GAAhB3C,KAAKE,SAAgB,GACjCT,KAAKmD,KAAO,IAAIhD,EAAU3B,EAAE4B,MAAQ,EAAI5B,EAAE4E,UAAUN,GAAQ,EAAIG,EAClDzE,EAAE6B,OAAS,EAAI6C,EACf1E,EAAE4E,UAAUN,GACZ9C,KAAKR,SAAWD,GAC9BS,KAAKqD,QAAUrD,KAAKR,UAAY,EAAID,GACpCS,KAAKuC,MAAQA,EA7Ic,OAAAzC,OAAA6B,EAAA,EAAA7B,CAAA2B,EAAA,EAAAG,IAAA,SAAAC,MAAA,WAiJ3BrD,EAAEwE,SAAShD,KAAKR,UAChBhB,EAAE8E,KAAKtD,KAAKuC,OACZ/D,EAAEsE,KAAK9C,KAAK8C,KAAM9C,KAAKmD,KAAKI,EAAGvD,KAAKmD,KAAKK,EAAIxD,KAAKqD,WAnJvB,CAAAzB,IAAA,kBAAAC,MAAA,SAyJb4B,GACdzD,KAAKmD,KAAKlB,gBAAgBwB,EAAMN,QA1JL,CAAAvB,IAAA,OAAAC,MAAA,WA8J3B7B,KAAKmD,KAAKjB,SA9JiB,CAAAN,IAAA,iBAAAC,MAAA,SAiKd6B,GACb1D,KAAKmD,KAAKlB,gBAAgByB,OAlKCjC,EAAA,GAsKzBtB,EAtKyB,WAuK7B,SAAAA,EAAYoD,EAAEC,EAAEG,EAAEC,GAAI9D,OAAAC,EAAA,EAAAD,CAAAE,KAAAG,GACpBH,KAAKuD,EAAIA,EACTvD,KAAKwD,EAAIA,EACTxD,KAAK2D,EAAIA,EACT3D,KAAK4D,EAAIA,EACT5D,KAAK6D,KAAON,EAAII,EAAI,EACpB3D,KAAK8D,KAAON,EAAII,EAAI,EACpB5D,KAAK+D,GAAK,EACV/D,KAAKgE,GAAK,EA/KiB,OAAAlE,OAAA6B,EAAA,EAAA7B,CAAAK,EAAA,EAAAyB,IAAA,OAAAC,MAAA,WAmL3B,OAAO7B,KAAK2D,EAAI3D,KAAK4D,IAnLM,CAAAhC,IAAA,SAAAC,MAAA,WAuL3BrD,EAAE2E,KAAKnD,KAAKuD,EAAGvD,KAAKwD,EAAGxD,KAAK2D,EAAG3D,KAAK4D,KAvLT,CAAAhC,IAAA,kBAAAC,MAAA,SA0Lb4B,GACd,GAAKzD,KAAKiE,SAASR,GAAnB,CAGA,IAAIS,EAAKlE,KAAK6D,KAAOJ,EAAMI,KACvBM,EAAKnE,KAAK8D,KAAOL,EAAMK,KAEvBI,EADY,GACMA,GAAM,EAC1BA,EAFc,EAGLA,GAHK,GAGcA,GAAM,IAClCA,GAJc,GAMZC,EANY,GAMMA,GAAM,EAC1BA,EAPc,EAQLA,GARK,GAQcA,GAAM,IAClCA,GATc,GAchB,IAAIC,EAAUC,IAAiBH,EAC7BI,EAAUD,IAAiBF,EAEzBI,EAAa/F,EAAEgG,IAAIxE,KAAKyE,OAAQ,IAChCC,EAAalG,EAAEgG,IAAIf,EAAMgB,OAAQ,IAGrCzE,KAAK+D,IAAMY,EAASP,EAAUG,EADpB,GAEVvE,KAAKgE,IAAMW,EAASL,EAAUC,EAFpB,GAGVd,EAAMM,IAAMY,EAASP,EAAUM,EAHrB,GAIVjB,EAAMO,IAAMW,EAASL,EAAUI,EAJrB,MApNiB,CAAA9C,IAAA,kBAAAC,MAAA,WA4N3B,IACI+C,EAAUpG,EAAE4B,MAAQ,EACpByE,EAAUrG,EAAE6B,OAAS,EACrByE,EAAKF,EAAU5E,KAAK6D,KACpBkB,EAAKF,EAAU7E,KAAK8D,KACxB9D,KAAK+D,IALe,KAKTe,EACX9E,KAAKgE,IANe,KAMTe,IAlOgB,CAAAnD,IAAA,OAAAC,MAAA,WAwO3B7B,KAAKuD,GAAKvD,KAAK+D,GACf/D,KAAKwD,GAAKxD,KAAKgE,GACfhE,KAAK6D,KAAO7D,KAAKuD,EAAIvD,KAAK2D,EAAI,EAC9B3D,KAAK8D,KAAO9D,KAAKwD,EAAIxD,KAAK4D,EAAI,EAC9B5D,KAAK+D,GALM,GAKD/D,KAAK+D,GACf/D,KAAKgE,GANM,GAMDhE,KAAK+D,KA7OY,CAAAnC,IAAA,WAAAC,MAAA,SAgPpB4B,GACP,OAAIzD,KAAKuD,EAAIE,EAAMF,EAAIE,EAAME,GAAK3D,KAAKuD,EAAIvD,KAAK2D,EAAIF,EAAMF,GACpDvD,KAAKwD,EAAIC,EAAMD,EAAIC,EAAMG,GAAK5D,KAAKwD,EAAIxD,KAAK4D,EAAIH,EAAMD,IAlPjC,CAAA5B,IAAA,WAAAC,MAAA,SAwPpB0B,EAAGC,GACV,OAAID,EAAIvD,KAAKuD,GAAKA,EAAIvD,KAAKuD,EAAIvD,KAAK2D,GAChCH,EAAIxD,KAAKwD,GAAKA,EAAIxD,KAAKwD,EAAIxD,KAAK4D,MA1PTzD,EAAA,GAiQzB6E,EAjQyB,WAkQ7B,SAAAA,EAAY/E,GAAYH,OAAAC,EAAA,EAAAD,CAAAE,KAAAgF,GACtBhF,KAAKC,UAAYA,EACjBD,KAAKiF,YAAc,KACnBjF,KAAKkF,QAAU,EACflF,KAAKqD,QAAU,EACfrD,KAAKmF,OAAS,EACdnF,KAAKoF,OAAS,EACdpF,KAAKqF,WAAY,EACjBrF,KAAKsF,eAAiB,EA1QK,OAAAxF,OAAA6B,EAAA,EAAA7B,CAAAkF,EAAA,EAAApD,IAAA,eAAAC,MAAA,WA8Q3B,IAAK,IAAIC,EAAI,EAAGA,EAAI9B,KAAKC,UAAUS,OAAQoB,IACrC9B,KAAKC,UAAU6B,GAAGqB,KAAKoC,SAAS/G,EAAEgH,OAAQhH,EAAEiH,UAC9CzF,KAAKiF,YAAcjF,KAAKC,UAAU6B,GAClC9B,KAAKkF,QAAU1G,EAAEgH,OAASxF,KAAKC,UAAU6B,GAAGqB,KAAKI,EACjDvD,KAAKqD,QAAU7E,EAAEiH,OAASzF,KAAKC,UAAU6B,GAAGqB,KAAKK,GAGrDxD,KAAKqF,WAAY,EACjBrF,KAAKmF,OAAS3G,EAAEgH,OAChBxF,KAAKoF,OAAS5G,EAAEiH,SAvRW,CAAA7D,IAAA,gBAAAC,MAAA,WA2R3B7B,KAAKiF,YAAc,KACnBjF,KAAKqF,WAAY,EACbrF,KAAKmF,OAAS3G,EAAEgH,OAASxF,KAAKsF,gBAAkBtF,KAAKmF,OAAS3G,EAAEgH,QAAUxF,KAAKsF,gBAC/EtF,KAAKoF,OAAS5G,EAAEiH,OAASzF,KAAKsF,gBAAkBtF,KAAKoF,OAAS5G,EAAEiH,QAAUzF,KAAKsF,gBACjFtF,KAAK0F,iBA/RoB,CAAA9D,IAAA,eAAAC,MAAA,WAoS3B8D,QAAQC,IAAI,SACZ5F,KAAK6F,yBArSsB,CAAAjE,IAAA,oBAAAC,MAAA,WAySH,MAApB7B,KAAKiF,cAGTjF,KAAKiF,YAAY9B,KAAKI,EAAI/E,EAAEgH,OAASxF,KAAKkF,QAC1ClF,KAAKiF,YAAY9B,KAAKK,EAAIhF,EAAEiH,OAASzF,KAAKqD,WA7Sf,CAAAzB,IAAA,uBAAAC,MAAA,WAiT3B,IAAIe,EAEFA,EADsB,MAApB5C,KAAKiF,YACD,GAEAjF,KAAKiF,YAAYnC,KAEzBgD,SAASC,eAAe,cAAclE,MAAQe,MAvTnBoC,EAAA,GAkW/B,SAASL,EAAS/B,EAAKN,GAGrB,OADYM,EAAM,GAAMA,EAAMA,GACnBN,GAFCM,EAAM,GAAM,EAAI,GAGZN,EAEPM,EA7CXpE,EAAEwH,MAAQ,WACRxH,EAAEyH,aAAa,IAAK,KACpBzH,EAAEwE,SAASxD,GACXhB,EAAE0H,UAAU1H,EAAE2H,KAAM3H,EAAE4H,KACtB5H,EAAE6H,YAAY,GACd/G,EAAmB,CACjBd,EAAE+D,MAAM,EAAG,GAAI,KACf/D,EAAE+D,MAAM,GAAI,IAAK,IACjB/D,EAAE+D,MAAM,IAAK,IAAK,IAClB/D,EAAE+D,MAAM,IAAK,GAAI,KACjB/D,EAAE+D,MAAM,GAAI,IAAK,MAEnB9D,EAAQ,IAAImB,EAAUjB,GAEtBD,EAAK,IAAIsG,EAAavG,EAAMwB,YAI9BzB,EAAE8H,KAAO,WAOP9H,EAAE+H,WAAW,KAEb9H,EAAM0D,iBACN1D,EAAM+H,mBACN9H,EAAG+H,oBACHhI,EAAMsD,UAGRvD,EAAEkI,cAAgB,WAChB,IAAItG,EAAQ0F,SAASC,eAAe,mBAAmBY,YACnDtG,EAASyF,SAASC,eAAe,mBAAmBa,aACxDpI,EAAEqI,aAAazG,EAAOC,IAaxB7B,EAAEsI,aAAe,WACfpI,EAAGoI,gBAGLtI,EAAEuI,cAAgB,WAChBrI,EAAGqI,mBCrXDC,iBAAQC,EAAQ,MAEhBC,8LACgB,IAAAC,EACUnH,KAAKzB,MAAzBD,EADU6I,EACV7I,OAAW8I,EADDtH,OAAAuH,EAAA,EAAAvH,CAAAqH,EAAA,YAElBnH,KAAKsH,OAAS,IAAIC,IAAGjJ,EAAO8I,GAAOpH,KAAKwH,2DAGhBC,GACIA,EAApBnJ,OAD0B,IACf8I,EADetH,OAAAuH,EAAA,EAAAvH,CACN2H,EADM,YAG9BzH,KAAKzB,MAAMD,SAAWmJ,EAASnJ,SACjC0B,KAAKsH,OAAOI,SACZ1H,KAAKsH,OAAS,IAAIC,IAAGE,EAASnJ,OAAO8I,GAAOpH,KAAKwH,UAGb,oBAA3BxH,KAAKsH,OAAOK,YACrB3H,KAAKsH,OAAOK,WAAWF,kDAKzBzH,KAAKsH,OAAOI,0CAGL,IAAAE,EAAA5H,KACP,OAAO6H,EAAAC,EAAAC,cAAA,OAAKC,IAAK,SAACR,GAAD,OAAaI,EAAKJ,QAAUA,YAxBzBS,IAAMC,WA+GfC,cAlFb,SAAAA,EAAY5J,GAAO,IAAA6J,EAAA,OAAAtI,OAAAC,EAAA,EAAAD,CAAAE,KAAAmI,IACjBC,EAAAtI,OAAAuI,EAAA,EAAAvI,CAAAE,KAAAF,OAAAwI,EAAA,EAAAxI,CAAAqI,GAAAI,KAAAvI,KAAMzB,KAaRiK,kBAAoB,SAACC,GACnBL,EAAKM,SAAS,CAAEC,UAAWF,EAAEG,OAAO/G,SAfnBuG,EAkBnBS,kBAAoB,SAACC,GACnBV,EAAKM,SAAS,CAAEK,UAAWD,IAC3BnD,QAAQC,KAAKwC,EAAKY,MAAMD,UAAUE,UAAY,KAAMC,QAAQ,KApB3Cd,EAuBnBe,gBAAiB,SAACL,GAChBV,EAAKM,SAAS,CAAEU,QAASN,IACzBnD,QAAQC,KAAKwC,EAAKY,MAAMD,UAAUE,UAAY,KAAMC,QAAQ,KAzB3Cd,EA4BnBiB,SAAW,SAACZ,GACVA,EAAEa,iBAEF,IAAIC,EAAOC,KAAKC,UAAU,CACxBd,UAAWP,EAAKY,MAAML,UACtBe,MAAOC,UAAUvB,EAAKY,MAAMD,UAAUE,UAAY,KAAMC,QAAQ,IAChEU,IAAKD,UAAUvB,EAAKY,MAAMI,QAAQH,UAAY,KAAMC,QAAQ,MAG9DlC,EAAM6C,KAAK,0BAA2BN,EAAM,CAC1CO,QAAS,CACPC,eAAgB,iCAChBC,8BAA+B,KAEjCC,QAAS,MAEVC,KAAK,SAACC,GAAD,OAASxE,QAAQC,IAAIuE,MA1C3B/B,EAAKY,MAAQ,CACXL,UAAW,GACXI,UAAW,IAAIqB,KACfhB,QAAS,IAAIgB,KACbC,MAAO,IAGTjC,EAAKI,kBAAoBJ,EAAKI,kBAAkB8B,KAAvBxK,OAAAyK,EAAA,EAAAzK,QAAAyK,EAAA,EAAAzK,CAAAsI,KACzBA,EAAKS,kBAAoBT,EAAKS,kBAAkByB,KAAvBxK,OAAAyK,EAAA,EAAAzK,QAAAyK,EAAA,EAAAzK,CAAAsI,KACzBA,EAAKe,gBAAkBf,EAAKe,gBAAgBmB,KAArBxK,OAAAyK,EAAA,EAAAzK,QAAAyK,EAAA,EAAAzK,CAAAsI,KAXNA,wEAsDjB,OACEP,EAAAC,EAAAC,cAAA,OAAKyC,UAAU,OACb3C,EAAAC,EAAAC,cAAA,QAAMsB,SAAUrJ,KAAKqJ,UACnBxB,EAAAC,EAAAC,cAAA,SAAOlG,MAAO7B,KAAKgJ,MAAML,UAAW8B,SAAUzK,KAAKwI,oBACnDX,EAAAC,EAAAC,cAAC2C,EAAA,EAAD,CACEC,SAAU3K,KAAKgJ,MAAMD,UACrB0B,SAAUzK,KAAK6I,kBACf+B,gBAAc,EACdC,WAAW,QACXC,cAAe,EACfC,WAAW,sBAEblD,EAAAC,EAAAC,cAAC2C,EAAA,EAAD,CACEC,SAAU3K,KAAKgJ,MAAMI,QACrBqB,SAAUzK,KAAKmJ,gBACfyB,gBAAc,EACdC,WAAW,QACXC,cAAe,EACfC,WAAW,sBAEblD,EAAAC,EAAAC,cAAA,yBAEFF,EAAAC,EAAAC,cAACiD,EAAD,CAAW1M,OAAQA,YA7ET4J,aChClB+C,IAASlJ,OAAO8F,EAAAC,EAAAC,cAACmD,EAAD,MAASpF,SAASC,eAAe","file":"static/js/main.6ba0ee93.chunk.js","sourcesContent":["import p5 from 'p5';\n\n/*\n\tTODO:\n\t\t1. add inwards force\n\t\t2. add color\n\t\t3. add ability to click/drag words\n\t\t4. clean up/refactor\n\t\t5. figure out communication with sentiment charts\n*/\n\nconst sketch = (props) => (p) => {\n  var dict = {\n    Lorem:1,\n    ipsum:2,\n    dolor:3,\n    sit:4,\n    amet:5,\n    consectetur:6,\n    adipiscing:7,\n    elit:8, \n    sed:9,\n    do:10,\n  }\n  \n  var colorBaseOptions = [];\n  \n  var scalar = 0.82; // Different for each font\n  var debug = false;\n  \n  var font,\n      fontSize = 80,\n      minFontSize = 12;\n  \n  var spawnBoxSize = 50;\n  \n  var spring = 0.5;\n  var force = 80000;\n    \n  var x,y, cloud;\n  \n  var numColors = 10;\n  var colorMinOffset = 10;\n  var colorMaxOffset = 65;\n  \n  var ih;\n  \n  class wordCloud {\n    constructor(wordDict) {\n    \n      this.wordDict = wordDict;\n      this.wordBoxes = [];\n      /*\n        boundaries are much bigger than necessary to ensure that \n        no words exit the screen by jumping over or through a boundary\n  \n        (0,0)\n      |--------|--------|--------|\n      |        |   b3   |        |\n      |        |        |        |\n      |        |--------|        |\n      |   b2   | canvas |   b1   |\n      |        |        |        |\n      |        |--------|        |\n      |        |   b4   |        |\n      |        |        |        |\n      |--------|--------|--------|\n                    (width, height)\n      */\n      this.boundaries = [\n        //b1\n        new Rectangle(p.width,  -p.height, p.width, p.height * 3),\n        //b2\n        new Rectangle(-p.width, -p.height, p.width, p.height * 3),\n        //b3\n        new Rectangle(0, -p.height, p.width, p.height),\n        //b4\n        new Rectangle(0, p.height, p.width, p.height)\n      ];\n  \n      var baseColor = colorBaseOptions[Math.floor(Math.random() * colorBaseOptions.length)];\n  \n      var maxFreq = 0;\n      for (const [word, freq] of Object.entries(wordDict)) {\n        if (freq > maxFreq) {\n          maxFreq = freq;\n        }\n      }\n      for (const [word, freq] of Object.entries(wordDict)) {\n        this.wordBoxes.push(new wordBox(word, freq, maxFreq, \n          this.getProceduralColor(baseColor, colorMinOffset, colorMaxOffset)));\n      }\n    }\n  \n    render() {\n      for (var i = 0; i < this.wordBoxes.length; i++) {\n        this.wordBoxes[i].render();\n      }\n      if (debug) {\n        for (var i = 0; i < this.boundaries.length; i++) {\n          this.boundaries[i].render();\n        }\n      }\n    }\n  \n    handleCollisions() {\n      for (var i = 0; i < this.wordBoxes.length; i++) {\n        for (var j = i; j < this.wordBoxes.length; j++) {\n          if (i == j) continue;\n          this.wordBoxes[i].handleCollision(this.wordBoxes[j]);\n        }\n      }\n      for (var i = 0; i < this.wordBoxes.length; i++) {\n        this.wordBoxes[i].move();\n      }\n    }\n  \n    handleBoundary() {\n      for (var i = 0; i < this.wordBoxes.length; i++) {\n        for (var j = 0; j < this.boundaries.length; j++) {\n          this.wordBoxes[i].handleBoundary(this.boundaries[j]);\n        }\n      }\n    }\n  \n    getProceduralColor(colorBase, min, max) {\n      return p.color(this.procColorHelper(p.red(colorBase), min, max),\n                   this.procColorHelper(p.green(colorBase), min, max),\n                   this.procColorHelper(p.blue(colorBase), min, max))\n    }\n  \n    procColorHelper(val, min, max) {\n      var temp = val + (Math.random() * ((max*2) - (min*2))) - max;\n      temp = Math.floor(temp <= 0 ? temp - min : temp + min);\n      return temp;\n    }\n  }\n  \n  class wordBox {\n    constructor(text, freq, maxFreq, color) {\n      this.text = text;\n      this.freq = freq;\n      this.maxFreq = maxFreq;\n      this.fontSize = p.map(freq/maxFreq, 0, 1, minFontSize, fontSize);\n      p.textSize(this.fontSize);\n      var randX = Math.random() * 30 - 15;\n      var randY = Math.random() * 30 - 15;\n      this.rect = new Rectangle(p.width / 2 - p.textWidth(text) / 2 + randX, \n                    p.height / 2 + randY, \n                    p.textWidth(text), \n                    this.fontSize * scalar);\n      this.yOffset = this.fontSize * (1 - scalar);\n      this.color = color;\n    }\n  \n    render() {\n      p.textSize(this.fontSize);\n      p.fill(this.color);\n      p.text(this.text, this.rect.x, this.rect.y - this.yOffset);\n      if (debug) {\n        this.rect.render();\n      }\n    }\n    \n    handleCollision(other) {\n      this.rect.handleCollision(other.rect);\n    }\n  \n    move() {\n      this.rect.move();\n    }\n  \n    handleBoundary(bound) {\n      this.rect.handleCollision(bound);\n    }\n  }\n  \n  class Rectangle {\n    constructor(x,y,w,h) {\n      this.x = x;\n      this.y = y;\n      this.w = w;\n      this.h = h;\n      this.midX = x + w / 2;\n      this.midY = y + h / 2;\n      this.vx = 0;\n      this.vy = 0;\n    }\n  \n    area() {\n      return this.w * this.h;\n    }\n  \n    render() {\n      p.rect(this.x, this.y, this.w, this.h);\n    }\n  \n    handleCollision(other) {\n      if (!this.collides(other)) {\n        return\n      }\n      var dx = this.midX - other.midX,\n          dy = this.midY - other.midY;\n      var threshold = 1.0;\n      if (dx < threshold && dx >= 0) {\n        dx = threshold;\n      } else if (dx > -threshold && dx <= 0) {\n        dx = -threshold;\n      }\n      if (dy < threshold && dy >= 0) {\n        dy = threshold;\n      } else if (dy > -threshold && dy <= 0) {\n        dy = -threshold;\n      }\n  \n      // var constvx = force * spring * dx / distance / distance,\n      // \tconstvy = force * spring * dy / distance / distance;\n      var constvx = force * spring / dx, // Math.abs(dx),\n        constvy = force * spring / dy; // Math.abs(dy);\n  \n      var areaScale1 = p.pow(this.area(), 0.3);\n      var areaScale2 = p.pow(other.area(), 0.3);\n  \n      var max = 1;\n      this.vx += clampAbs(constvx / areaScale1, max);\n      this.vy += clampAbs(constvy / areaScale1, max);\n      other.vx -= clampAbs(constvx / areaScale2, max);\n      other.vy -= clampAbs(constvy / areaScale2, max);\n    }\n  \n    addInwardsForce() {\n      var forceStrength = 0.0001;\n      var centerX = p.width / 2;\n      var centerY = p.height / 2;\n      var fX = centerX - this.midX;\n      var fY = centerY - this.midY;\n      this.vx += fX * forceStrength;\n      this.vy += fY * forceStrength;\n    }\n  \n    move() {\n      // this.addInwardsForce();\n      var drag = 0.4;\n      this.x += this.vx;\n      this.y += this.vy;\n      this.midX = this.x + this.w / 2;\n      this.midY = this.y + this.h / 2;\n      this.vx = this.vx * drag;\n      this.vy = this.vx * drag;\n    }\n  \n    collides(other) {\n      if (this.x < other.x + other.w && this.x + this.w > other.x &&\n            this.y < other.y + other.h && this.y + this.h > other.y) {\n        return true;\n      }\n      return false;\n    }\n  \n    contains(x, y) {\n      if (x > this.x && x < this.x + this.w &&\n          y > this.y && y < this.y + this.h) {\n        return true;\n      }\n      return false;\n    }\n  }\n  \n  class InputHandler {\n    constructor(wordBoxes) {\n      this.wordBoxes = wordBoxes;\n      this.attachedBox = null;\n      this.xOffset = 0;\n      this.yOffset = 0;\n      this.clickX = 0;\n      this.clickY = 0;\n      this.isPressed = false;\n      this.clickThreshold = 2;\n    }\n  \n    mousePressed() {\n      for (var i = 0; i < this.wordBoxes.length; i++) {\n        if (this.wordBoxes[i].rect.contains(p.mouseX, p.mouseY)) {\n          this.attachedBox = this.wordBoxes[i];\n          this.xOffset = p.mouseX - this.wordBoxes[i].rect.x;\n          this.yOffset = p.mouseY - this.wordBoxes[i].rect.y;\n        }\n      }\n      this.isPressed = true;\n      this.clickX = p.mouseX;\n      this.clickY = p.mouseY;\n    }\n  \n    mouseReleased() {\n      this.attachedBox = null;\n      this.isPressed = false;\n      if (this.clickX - p.mouseX < this.clickThreshold && this.clickX - p.mouseX > -this.clickThreshold &&\n          this.clickY - p.mouseY < this.clickThreshold && this.clickY - p.mouseY > -this.clickThreshold) {\n        this.mouseClicked();\n      }\n    }\n  \n    mouseClicked() {\n      console.log(\"click\");\n      this.updateSentimentChart();\n    }\n  \n    handleAttachedBox() {\n      if (this.attachedBox == null) {\n        return;\n      }\n      this.attachedBox.rect.x = p.mouseX - this.xOffset;\n      this.attachedBox.rect.y = p.mouseY - this.yOffset;\n    }\n  \n    updateSentimentChart() {\n      var val;\n      if (this.attachedBox == null) {\n        val = \"\";\n      } else {\n        val = this.attachedBox.text;\n      }\n      document.getElementById(\"canvasForm\").value = val;\n    }\n  }\n  \n  p.setup = () => {\n    p.createCanvas(720, 400);\n    p.textSize(fontSize);\n    p.textAlign(p.LEFT, p.TOP);\n    p.textLeading(0);\n    colorBaseOptions = [\n      p.color(0, 51, 204),\n      p.color(51, 204, 51),\n      p.color(255, 153, 51),\n      p.color(153, 51, 255),\n      p.color(51, 204, 204)\n    ];\n    cloud = new wordCloud(dict);\n    //make sure to initialize inputHandler after wordCloud, should refactor this\n    ih = new InputHandler(cloud.wordBoxes);\n  }\n  \n  \n  p.draw = () => {\n    if (debug) {\n      p.noFill();\n      p.stroke(255, 128, 0);\n    } else {\n  \n    }\n    p.background(255);\n  \n    cloud.handleBoundary();\n    cloud.handleCollisions();\n    ih.handleAttachedBox();\n    cloud.render();\n  }\n  \n  p.windowResized = () => {\n    var width = document.getElementById('canvasContainer').offsetWidth;\n    var height = document.getElementById('canvasContainer').offsetHeight;\n    p.resizeCanvas(width, height);\n  }\n  \n  function clampAbs(val, max) {\n    var sign = (val < 0) ? -1 : 1;\n    var temp = (val < 0) ? -val : val;\n    if (temp > max) {\n      return sign * max;\n    } else {\n      return val;\n    }\n  }\n  \n  p.mousePressed = () => {\n    ih.mousePressed();\n  }\n  \n  p.mouseReleased = () => {\n    ih.mouseReleased();\n  }\n}\n\nexport default sketch;\n","import React, { Component } from 'react';\nimport DatePicker from \"react-datepicker\";\nimport sketch from './sketch';\nimport p5 from 'p5';\nimport './App.css';\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nconst axios = require('axios');\n\nclass P5Wrapper extends React.Component {\n  componentDidMount() {\n    const { sketch, ...rest } = this.props;\n    this.canvas = new p5(sketch(rest), this.wrapper);\n  }\n\n  componentWillReceiveProps(newProps) {\n    const { sketch, ...rest } = newProps;\n\n    if (this.props.sketch !== newProps.sketch) {\n      this.canvas.remove();\n      this.canvas = new p5(newProps.sketch(rest), this.wrapper);\n    }\n\n    if (typeof this.canvas.onNewProps === \"function\") {\n      this.canvas.onNewProps(newProps);\n    }\n  }\n\n  componentWillUnmount() {\n    this.canvas.remove();\n  }\n\n  render() {\n    return <div ref={(wrapper) => this.wrapper = wrapper} />;\n  }\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      subreddit: \"\",\n      startDate: new Date(),\n      endDate: new Date(),\n      words: {}\n    };\n\n    this.onChangeSubreddit = this.onChangeSubreddit.bind(this);\n    this.onChangeStartDate = this.onChangeStartDate.bind(this);\n    this.onChangeEndDate = this.onChangeEndDate.bind(this);\n  }\n\n  onChangeSubreddit = (e) => {\n    this.setState({ subreddit: e.target.value });\n  }\n\n  onChangeStartDate = (date) => {\n    this.setState({ startDate: date });\n    console.log((this.state.startDate.getTime() / 1000).toFixed(0));\n  }\n  \n  onChangeEndDate= (date) => {\n    this.setState({ endDate: date });\n    console.log((this.state.startDate.getTime() / 1000).toFixed(0));\n  }\n\n  onSubmit = (e) => {\n    e.preventDefault();\n\n    let data = JSON.stringify({\n      subreddit: this.state.subreddit,\n      start: parseInt((this.state.startDate.getTime() / 1000).toFixed(0)),\n      end: parseInt((this.state.endDate.getTime() / 1000).toFixed(0))\n    })\n    \n    axios.post('http://18.223.169.36:80', data, {\n      headers: {\n        'Content-Type': 'application/json;charset=UTF-8',\n        \"Access-Control-Allow-Origin\": \"*\",\n      },\n      timeout: 60000\n    })\n    .then((res) => console.log(res));\n    // .then((data) => {\n    //   this.setState({\n    //     words: data\n    //   });\n    //   console.log(data)\n    // });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <form onSubmit={this.onSubmit}>\n          <input value={this.state.subreddit} onChange={this.onChangeSubreddit} />\n          <DatePicker\n            selected={this.state.startDate}\n            onChange={this.onChangeStartDate}\n            showTimeSelect\n            timeFormat=\"HH:mm\"\n            timeIntervals={5}\n            dateFormat=\"MM/d/yyyy h:mm aa\"\n          />\n          <DatePicker\n            selected={this.state.endDate}\n            onChange={this.onChangeEndDate}\n            showTimeSelect\n            timeFormat=\"HH:mm\"\n            timeIntervals={5}\n            dateFormat=\"MM/d/yyyy h:mm aa\"\n          />\n          <button>Submit</button>\n        </form>\n        <P5Wrapper sketch={sketch}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}